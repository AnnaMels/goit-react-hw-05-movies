{"version":3,"file":"static/js/383.b63c764b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TrendingMoviesList/TrendingMoviesList.module.css?d6c4","webpack://react-homework-template/./src/components/TrendingMoviesItem/TrendingMoviesListItem.module.css?9386","components/TrendingMoviesItem/TrendingMoviesItem.jsx","components/TrendingMoviesList/TrendingMoviesList.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/HomePage.jsx","services/movieDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"TrendingMoviesList_moviesList__Opydk\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"TrendingMoviesListItem_listItem__m7iy3\",\"listImg\":\"TrendingMoviesListItem_listImg__jN0CX\",\"listLink\":\"TrendingMoviesListItem_listLink__duC0h\"};","import styles from './TrendingMoviesListItem.module.css';\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst TrendingMoviesItem = ({ title, name, id, img }) => {\n    const from = useLocation();\n    return (\n        <>\n            <li className={styles.listItem}><Link className={styles.listLink} to={`/movies/${id}`} state={{ from }} ><img className={styles.listImg} src={img} alt={title} />{title ? title : name}</Link>\n            </li>\n        </>\n    );\n}\n\nexport default TrendingMoviesItem;","import styles from './TrendingMoviesList.module.css';\nimport defaultImg from '../../images/defaultImg.png'\nimport TrendingMoviesItem from \"../TrendingMoviesItem/TrendingMoviesItem\";\nconst TrendingMovieList = ({ movies }) => {\n    return (\n        <>\n            {<ul className={styles.moviesList}>{movies.map(({ title, id, name, poster_path }) => {\n                const img = poster_path ? `https://image.tmdb.org/t/p/w300/${poster_path}` : defaultImg;\n                return <TrendingMoviesItem title={title} key={id} name={name} id={id} img={img}/>\n\n            } \n            )}</ul>}\n        </>\n    ) \n}\n\nexport default TrendingMovieList;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { fetchTrendingMovies } from '../services/movieDbApi';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TrendingMoviesList from '../components/TrendingMoviesList/TrendingMoviesList';\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetchTrendingMovies()\n            .then(movies => {\n                setMovies([...movies.results]);\n        })\n    }, [])\n\n\n    return (\n            <TrendingMoviesList movies={movies}/>\n    )\n}\n\nHomePage.propTypes = {\n    movies: PropTypes.array,\n}\n\nexport default HomePage;","const API_KEY = '584850c42ae7d2e479212f5963ad1dce';\n\nexport async function fetchMovie(movieId) {\n    const key = 'movie-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(movie => {\n            sessionStorage.setItem(key, JSON.stringify(movie));\n            return movie;\n        })\n    // .then(movie => movie)\n}\n\nexport async function fetchTrendingMovies() {\n    const savedData = sessionStorage.getItem('data');\n\n    if (savedData) {\n        return JSON.parse(savedData);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(r => r.json())\n        .then(films => {\n            sessionStorage.setItem('data', JSON.stringify(films));\n            return films;\n        })\n}\n\nexport async function fetchCast(movieId) {\n    const key = 'movieCast-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(cast => {\n            sessionStorage.setItem(key, JSON.stringify(cast));\n            return cast;\n        })\n}\n\nexport async function fetchMovieByKeyWord(searchQuery) {\n    return await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(r => r.json())\n        .then(movie => movie);\n}\n\nexport async function fetchReview(movieId) {\n    const key = 'movieReview-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(r => r.json())\n        .then(review => {\n            sessionStorage.setItem(key, JSON.stringify(review));\n            return review;\n        });\n}\n\n"],"names":["title","name","id","img","from","useLocation","className","styles","to","state","src","alt","movies","map","poster_path","defaultImg","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","useState","setMovies","useEffect","fetchTrendingMovies","then","results","TrendingMoviesList","API_KEY","fetchMovie","movieId","key","savedMovie","sessionStorage","getItem","JSON","parse","fetch","r","json","movie","setItem","stringify","savedData","films","fetchCast","cast","fetchMovieByKeyWord","searchQuery","fetchReview","review"],"sourceRoot":""}