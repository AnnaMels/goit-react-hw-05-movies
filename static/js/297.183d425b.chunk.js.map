{"version":3,"file":"static/js/297.183d425b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieCardPage.jsx","services/movieDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieInfo_button__0Ajue\",\"container\":\"MovieInfo_container__MNRAo\",\"movieInfo\":\"MovieInfo_movieInfo__LxIpr\",\"movieDetails\":\"MovieInfo_movieDetails__Z++1w\",\"title\":\"MovieInfo_title__oNnRW\",\"additionalInfo\":\"MovieInfo_additionalInfo__1eqYM\",\"cardList\":\"MovieInfo_cardList__iO13G\",\"cardLink\":\"MovieInfo_cardLink__+2F2x\",\"active\":\"MovieInfo_active__XQDP5\",\"cardListItem\":\"MovieInfo_cardListItem__7rQNS\"};","import { NavLink, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport styles from './MovieInfo.module.css';\n\n\nconst MovieInfo = ({ film, error }) => {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const from = location.state?.from || '/movies';\n\n    return (\n        <>\n            {error ? <p>Page not found</p> : <div className={styles.container}>\n                <button className={styles.button} onClick={() => navigate(from)} >Go back</button>\n                <div className={styles.movieInfo}>\n                    <img src={film.img} alt={film.title} />\n                    <div className={styles.movieDetails}>\n                        <h1 className={styles.title}>{film.title}</h1>\n                        <p>User Score: {film.score}%</p>\n                        <h2 className={styles.title}>Overview</h2>\n                        <p>{film.overview}</p>\n                        <h3 className={styles.title}>Genres</h3>\n                        <p>{film.genres}</p>\n                    </div>\n                </div>\n                <div>\n                    <p className={styles.additionalInfo}>Additional information</p>\n                    <ul className={styles.cardList}>\n                        <li className={styles.cardListItem}><NavLink className={({ isActive }) => isActive ? `${styles.active}` : `${styles.cardLink}`} state={{ from }} to='cast'>Cast</NavLink></li>\n                        <li className={styles.cardListItem}><NavLink className={({ isActive }) => isActive ? `${styles.active}` : `${styles.cardLink}`} state={{ from }} to='review'>Review</NavLink></li>\n                    </ul>\n                    <Outlet />\n                </div>\n            </div>}\n        </>\n    );\n}\n\nexport default MovieInfo;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultImg from '../images/filmCardDefaultImg.png'\nimport { fetchMovie } from \"../services/movieDbApi\";\nimport MovieInfo from \"../components/MovieInfo/MovieInfo\";\n\n\nconst Card = () => {\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState(false);\n    const { id } = useParams();\n\n    useEffect(() => {\n\n        const saveData = (film) => {\n\n            let filmGenres = [];\n\n            if (film.genres) {\n                film.genres.map(el => filmGenres.push(el.name));\n            };\n\n            const genres = filmGenres.join(', ');\n            const img = film.poster_path ? `https://image.tmdb.org/t/p/w300/${film.poster_path}` : defaultImg;\n            const newData = {\n                title: film.title,\n                img,\n                score: Math.ceil(film.vote_average * 10),\n                overview: film.overview,\n                genres,\n            };\n            setMovie(newData);\n        }\n\n        fetchMovie(id)\n            .then(film => {\n                if (film.success === false) {\n                    setError(true)\n                };\n\n                saveData(film);\n            });\n    }, [id]);\n\n\n    return (\n            <MovieInfo film={movie} error={error} />\n    )\n}\n\nCard.propTypes = {\n    movie: PropTypes.object,\n    error: PropTypes.bool,\n    newData: PropTypes.shape({\n        title: PropTypes.string,\n        img: PropTypes.string,\n        score: PropTypes.number,\n        genres: PropTypes.string,\n    })\n};\n\nexport default Card;","const API_KEY = '584850c42ae7d2e479212f5963ad1dce';\n\nexport async function fetchMovie(movieId) {\n    const key = 'movie-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(movie => {\n            sessionStorage.setItem(key, JSON.stringify(movie));\n            return movie;\n        })\n    // .then(movie => movie)\n}\n\nexport async function fetchTrendingMovies() {\n    const savedData = sessionStorage.getItem('data');\n\n    if (savedData) {\n        return JSON.parse(savedData);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(r => r.json())\n        .then(films => {\n            sessionStorage.setItem('data', JSON.stringify(films));\n            return films;\n        })\n}\n\nexport async function fetchCast(movieId) {\n    const key = 'movieCast-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(cast => {\n            sessionStorage.setItem(key, JSON.stringify(cast));\n            return cast;\n        })\n}\n\nexport async function fetchMovieByKeyWord(searchQuery) {\n    return await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(r => r.json())\n        .then(movie => movie);\n}\n\nexport async function fetchReview(movieId) {\n    const key = 'movieReview-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(r => r.json())\n        .then(review => {\n            sessionStorage.setItem(key, JSON.stringify(review));\n            return review;\n        });\n}\n\n"],"names":["film","error","navigate","useNavigate","from","useLocation","state","className","styles","onClick","src","img","alt","title","score","overview","genres","isActive","to","useState","movie","setMovie","setError","id","useParams","useEffect","fetchMovie","then","success","filmGenres","map","el","push","name","join","poster_path","defaultImg","newData","Math","ceil","vote_average","saveData","API_KEY","movieId","key","savedMovie","sessionStorage","getItem","JSON","parse","fetch","r","json","setItem","stringify","fetchTrendingMovies","savedData","films","fetchCast","cast","fetchMovieByKeyWord","searchQuery","fetchReview","review"],"sourceRoot":""}