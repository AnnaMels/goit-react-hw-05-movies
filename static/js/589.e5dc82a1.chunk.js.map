{"version":3,"file":"static/js/589.e5dc82a1.chunk.js","mappings":"2NACA,EAA6B,2BAA7B,EAAiE,uBAAjE,EAAkG,wB,SCUlG,EAVe,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEd,OACI,2BACuB,IAAlBA,EAAOC,SAAgB,gDACxB,eAAIC,UAAWC,EAAf,SAAmCH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OAA6B,2BAAa,qCAAW,iBAAML,UAAWC,EAAjB,SAAiCI,QAAkB,iBAAML,UAAWC,EAAjB,SAAkCG,MAApGD,EAAtC,QAGzD,ECmCD,EArCmB,WACf,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACQJ,GAAOK,EAAAA,EAAAA,MAAPL,GAqBR,OAnBAM,EAAAA,EAAAA,YAAU,YAeNC,EAAAA,EAAAA,IAAYP,GACPQ,MAAK,SAAAb,GAAM,OAfE,SAACA,GACf,GAAIA,EAAQ,CACR,IAAMc,EAAkBd,EAAOI,KAAI,SAAAW,GAM/B,MALgB,CACZR,OAAQQ,EAAGR,OACXD,QAASS,EAAGT,QACZD,GAAIU,EAAGV,GAGd,IACDI,EAAUK,EACb,CACJ,CAGmBE,CAAUhB,EAAOiB,QAArB,GACnB,GAAE,CAACZ,KAGA,SAAC,EAAD,CAAQL,OAAQA,GAEvB,C,qLCjCKkB,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,4EACGC,EAAM,SAAWD,IACjBE,EAAaC,eAAeC,QAAQH,IAFvC,yCAKQI,KAAKC,MAAMJ,IALnB,uBAQUK,MAAM,sCAAD,OAAuCP,EAAvC,oBAA0DF,EAA1D,oBACbL,MAAK,SAAAe,GAAC,OAAIA,EAAEC,MAAN,IACNhB,MAAK,SAAAiB,GAEF,OADAP,eAAeQ,QAAQV,EAAKI,KAAKO,UAAUF,IACpCA,CACV,IAbF,0GAiBA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,yFACGC,EAAYX,eAAeC,QAAQ,SADtC,yCAIQC,KAAKC,MAAMQ,IAJnB,uBAOUP,MAAM,yDAAD,OAA0DT,IACvEL,MAAK,SAAAe,GAAC,OAAIA,EAAEC,MAAN,IACNhB,MAAK,SAAAsB,GAEF,OADAZ,eAAeQ,QAAQ,OAAQN,KAAKO,UAAUG,IACvCA,CACV,IAZF,0GAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBhB,GAAzB,4EACGC,EAAM,aAAeD,IACrBE,EAAaC,eAAeC,QAAQH,IAFvC,yCAKQI,KAAKC,MAAMJ,IALnB,uBAQUK,MAAM,sCAAD,OAAuCP,EAAvC,4BAAkEF,EAAlE,oBACbL,MAAK,SAAAe,GAAC,OAAIA,EAAEC,MAAN,IACNhB,MAAK,SAAAwB,GAEF,OADAd,eAAeQ,QAAQV,EAAKI,KAAKO,UAAUK,IACpCA,CACV,IAbF,0GAgBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,iFACUZ,MAAM,qDAAD,OAAsDT,EAAtD,4DAAiHqB,IAC9H1B,MAAK,SAAAe,GAAC,OAAIA,EAAEC,MAAN,IACNhB,MAAK,SAAAiB,GAAK,OAAIA,CAAJ,IAHZ,0GAMA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BQ,GAA3B,4EACGC,EAAM,eAAiBD,IACvBE,EAAaC,eAAeC,QAAQH,IAFvC,yCAKQI,KAAKC,MAAMJ,IALnB,uBAQUK,MAAM,sCAAD,OAAuCP,EAAvC,4BAAkEF,EAAlE,2BACbL,MAAK,SAAAe,GAAC,OAAIA,EAAEC,MAAN,IACNhB,MAAK,SAAAb,GAEF,OADAuB,eAAeQ,QAAQV,EAAKI,KAAKO,UAAUhC,IACpCA,CACV,IAbF,0G","sources":["webpack://react-homework-template/./src/components/Review/Review.module.css?3727","components/Review/Review.jsx","pages/ReviewPage.jsx","services/movieDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Review_reviewList__H0IS2\",\"author\":\"Review_author__iUpEw\",\"content\":\"Review_content__bMXgY\"};","import styles from './Review.module.css';\nconst Review = ({ review }) => {\n\n    return (\n        <div>\n            {review.length === 0 && <p>Review is not found</p> }\n            <ul className={styles.reviewList}>{review.map(({ id, content, author }) => <li key={id}><p>Author: <span className={styles.author}>{author}</span></p><span className={styles.content}>{content}</span></li>)}</ul>\n        </div>\n    )\n}\n\nexport default Review;","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { fetchReview } from \"../services/movieDbApi\";\nimport Review from '../components/Review';\n    \n\nconst ReviewPage = () => {\n    const [review, setReview] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        const parseData = (review) => {\n            if (review) {\n                const parseReviewInfo = review.map(el => {\n                    const newData = {\n                        author: el.author,\n                        content: el.content,\n                        id: el.id,\n                    };\n                    return newData;\n                })\n                setReview(parseReviewInfo);\n            }\n        }\n        \n        fetchReview(id)\n            .then(review => parseData(review.results));\n    }, [id])\n\n    return (\n        <Review review={review} />\n    );\n}\n\nReviewPage.propTypes = {\n    review: PropTypes.array,\n    newData: PropTypes.shape({\n        author: PropTypes.string,\n        content: PropTypes.string,\n        id: PropTypes.string,\n    })\n};\n\nexport default ReviewPage;","const API_KEY = '584850c42ae7d2e479212f5963ad1dce';\n\nexport async function fetchMovie(movieId) {\n    const key = 'movie-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(movie => {\n            sessionStorage.setItem(key, JSON.stringify(movie));\n            return movie;\n        })\n    // .then(movie => movie)\n}\n\nexport async function fetchTrendingMovies() {\n    const savedData = sessionStorage.getItem('data');\n\n    if (savedData) {\n        return JSON.parse(savedData);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(r => r.json())\n        .then(films => {\n            sessionStorage.setItem('data', JSON.stringify(films));\n            return films;\n        })\n}\n\nexport async function fetchCast(movieId) {\n    const key = 'movieCast-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(cast => {\n            sessionStorage.setItem(key, JSON.stringify(cast));\n            return cast;\n        })\n}\n\nexport async function fetchMovieByKeyWord(searchQuery) {\n    return await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(r => r.json())\n        .then(movie => movie);\n}\n\nexport async function fetchReview(movieId) {\n    const key = 'movieReview-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(r => r.json())\n        .then(review => {\n            sessionStorage.setItem(key, JSON.stringify(review));\n            return review;\n        });\n}\n\n"],"names":["review","length","className","styles","map","id","content","author","useState","setReview","useParams","useEffect","fetchReview","then","parseReviewInfo","el","parseData","results","API_KEY","fetchMovie","movieId","key","savedMovie","sessionStorage","getItem","JSON","parse","fetch","r","json","movie","setItem","stringify","fetchTrendingMovies","savedData","films","fetchCast","cast","fetchMovieByKeyWord","searchQuery"],"sourceRoot":""}