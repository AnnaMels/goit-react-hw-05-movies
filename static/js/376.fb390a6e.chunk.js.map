{"version":3,"file":"static/js/376.fb390a6e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TrendingMoviesList/TrendingMoviesList.module.css?d6c4","webpack://react-homework-template/./src/components/TrendingMoviesItem/TrendingMoviesListItem.module.css?9386","components/TrendingMoviesItem/TrendingMoviesItem.jsx","components/TrendingMoviesList/TrendingMoviesList.jsx","webpack://react-homework-template/./src/pages/MoviesSearchPage/MoviesSearchPage.module.css?13ec","pages/MoviesSearchPage/MoviesSearchPage.jsx","services/movieDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"TrendingMoviesList_moviesList__Opydk\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"TrendingMoviesListItem_listItem__m7iy3\",\"listImg\":\"TrendingMoviesListItem_listImg__jN0CX\",\"listLink\":\"TrendingMoviesListItem_listLink__duC0h\"};","import styles from './TrendingMoviesListItem.module.css';\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst TrendingMoviesItem = ({ title, name, id, img }) => {\n    const from = useLocation();\n    return (\n        <>\n            <li className={styles.listItem}><Link className={styles.listLink} to={`/movies/${id}`} state={{ from }} ><img className={styles.listImg} src={img} alt={title} />{title ? title : name}</Link>\n            </li>\n        </>\n    );\n}\n\nexport default TrendingMoviesItem;","import styles from './TrendingMoviesList.module.css';\nimport defaultImg from '../../images/defaultImg.png'\nimport TrendingMoviesItem from \"../TrendingMoviesItem/TrendingMoviesItem\";\nconst TrendingMovieList = ({ movies }) => {\n    return (\n        <>\n            {<ul className={styles.moviesList}>{movies.map(({ title, id, name, poster_path }) => {\n                const img = poster_path ? `https://image.tmdb.org/t/p/w300/${poster_path}` : defaultImg;\n                return <TrendingMoviesItem title={title} key={id} name={name} id={id} img={img}/>\n\n            } \n            )}</ul>}\n        </>\n    ) \n}\n\nexport default TrendingMovieList;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MoviesSearchPage_button__895ZD\",\"form\":\"MoviesSearchPage_form__iw9HT\",\"input\":\"MoviesSearchPage_input__bmWAS\",\"formWrapper\":\"MoviesSearchPage_formWrapper__30EnU\"};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchMovieByKeyWord } from \"../../services/movieDbApi\";\nimport PropTypes from 'prop-types';\nimport styles from './MoviesSearchPage.module.css';\nimport TrendingMovieList from \"../../components/TrendingMoviesList/TrendingMoviesList\";\n\nconst SearchMovie = () => {\n    const [state, setState] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query');\n\n    \n    useEffect(() => {\n        if (query) {\n            fetchMovieByKeyWord(query)\n                .then(movie => setMovies(movie.results));\n        };\n    }, [query])\n\n    const onSearchButtonClick = (e) => {\n        e.preventDefault();\n            setSearchParams({ query: state });\n    }\n\n    return (\n        <div className={styles.formWrapper}>\n            <form className={styles.form} onSubmit={onSearchButtonClick}>\n                <input className={styles.input} onChange={e => setState(e.target.value)} type=\"text\" />\n\n                <button className={styles.button}>Search</button>\n            </form>\n            <TrendingMovieList movies={movies}/>\n        </div>\n    );\n}\n\nSearchMovie.propTypes = {\n    state: PropTypes.string,\n    movies: PropTypes.array,\n    query: PropTypes.string,\n}\n\n    export default SearchMovie;\n","const API_KEY = '584850c42ae7d2e479212f5963ad1dce';\n\nexport async function fetchMovie(movieId) {\n    const key = 'movie-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(movie => {\n            sessionStorage.setItem(key, JSON.stringify(movie));\n            return movie;\n        })\n    // .then(movie => movie)\n}\n\nexport async function fetchTrendingMovies() {\n    const savedData = sessionStorage.getItem('data');\n\n    if (savedData) {\n        return JSON.parse(savedData);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(r => r.json())\n        .then(films => {\n            sessionStorage.setItem('data', JSON.stringify(films));\n            return films;\n        })\n}\n\nexport async function fetchCast(movieId) {\n    const key = 'movieCast-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(cast => {\n            sessionStorage.setItem(key, JSON.stringify(cast));\n            return cast;\n        })\n}\n\nexport async function fetchMovieByKeyWord(searchQuery) {\n    return await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(r => r.json())\n        .then(movie => movie);\n}\n\nexport async function fetchReview(movieId) {\n    const key = 'movieReview-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(r => r.json())\n        .then(review => {\n            sessionStorage.setItem(key, JSON.stringify(review));\n            return review;\n        });\n}\n\n"],"names":["title","name","id","img","from","useLocation","className","styles","to","state","src","alt","movies","map","poster_path","defaultImg","useState","setState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieByKeyWord","then","movie","results","onSubmit","e","preventDefault","onChange","target","value","type","API_KEY","fetchMovie","movieId","key","savedMovie","sessionStorage","getItem","JSON","parse","fetch","r","json","setItem","stringify","fetchTrendingMovies","savedData","films","fetchCast","cast","searchQuery","fetchReview","review"],"sourceRoot":""}