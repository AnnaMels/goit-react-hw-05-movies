{"version":3,"file":"static/js/392.816a2c26.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","pages/CastPage.jsx","services/movieDbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"cardListItem\":\"Cast_cardListItem__hsOiC\",\"castImg\":\"Cast_castImg__T4WbF\",\"actor\":\"Cast_actor__tWtXy\",\"character\":\"Cast_character__tKDlA\",\"castInfo\":\"Cast_castInfo__fGvyp\"};","import styles from './Cast.module.css';\n\nconst Cast = ({ cast }) => {\n    return (\n        <div>\n            {<ul className={styles.castList}>{cast.map(({ id, name, character, imageUrl }) => <li className={styles.cardListItem} key={id}><img className={styles.castImg} src={imageUrl} alt={name} /><p className={styles.castInfo}> Actor: <br /> <span className={styles.actor}> {name}</span></p><p className={styles.castInfo}>Character: <br /> <span className={styles.character}> {character}</span></p></li>)}</ul>}\n        </div>\n    )\n}\n\nexport default Cast;","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from '../services/movieDbApi';\nimport PropTypes from 'prop-types';\nimport defaultImage from '../images/defaultImg.png';\nimport Cast from '../components/Cast';\n\nconst CastPage = () => {\n    const [cast, setCast] = useState([]);\n    \n    const { id } = useParams();\n\n    useEffect(() => {\n        const parseData = (film) => {\n            if (film) {\n                const parseCastInfo = film.map(mov => {\n                    const imageUrl = mov.profile_path ? `https://image.tmdb.org/t/p/w200/${mov.profile_path}` : defaultImage;\n\n                    const newData = {\n                        id: mov.id,\n                        character: mov.character,\n                        name: mov.name,\n                        imageUrl,\n                    };\n                    return newData;\n                })\n\n                setCast(parseCastInfo);\n            }\n        }\n\n    \n        fetchCast(id)\n            .then(film => {\n                const filmInfo = film.cast;\n                parseData(filmInfo);\n            });\n    }, [id]);\n\n    return (\n        <>\n            <Cast cast={cast} />\n        </>\n    )\n}\n\nCastPage.propTypes = {\n    cast: PropTypes.array,\n    newData: PropTypes.shape({\n        id: PropTypes.string,\n        character: PropTypes.string,\n        name: PropTypes.string,\n        imageUrl: PropTypes.string\n    }),\n    parseData: PropTypes.func,\n    film: PropTypes.object,\n}\n\nexport default CastPage;","const API_KEY = '584850c42ae7d2e479212f5963ad1dce';\n\nexport async function fetchMovie(movieId) {\n    const key = 'movie-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(movie => {\n            sessionStorage.setItem(key, JSON.stringify(movie));\n            return movie;\n        })\n    // .then(movie => movie)\n}\n\nexport async function fetchTrendingMovies() {\n    const savedData = sessionStorage.getItem('data');\n\n    if (savedData) {\n        return JSON.parse(savedData);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n        .then(r => r.json())\n        .then(films => {\n            sessionStorage.setItem('data', JSON.stringify(films));\n            return films;\n        })\n}\n\nexport async function fetchCast(movieId) {\n    const key = 'movieCast-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(r => r.json())\n        .then(cast => {\n            sessionStorage.setItem(key, JSON.stringify(cast));\n            return cast;\n        })\n}\n\nexport async function fetchMovieByKeyWord(searchQuery) {\n    return await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(r => r.json())\n        .then(movie => movie);\n}\n\nexport async function fetchReview(movieId) {\n    const key = 'movieReview-' + movieId;\n    const savedMovie = sessionStorage.getItem(key);\n\n    if (savedMovie) {\n        return JSON.parse(savedMovie);\n    }\n\n    return await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(r => r.json())\n        .then(review => {\n            sessionStorage.setItem(key, JSON.stringify(review));\n            return review;\n        });\n}\n\n"],"names":["cast","className","styles","map","id","name","character","imageUrl","src","alt","useState","setCast","useParams","useEffect","fetchCast","then","film","parseCastInfo","mov","profile_path","defaultImage","parseData","API_KEY","fetchMovie","movieId","key","savedMovie","sessionStorage","getItem","JSON","parse","fetch","r","json","movie","setItem","stringify","fetchTrendingMovies","savedData","films","fetchMovieByKeyWord","searchQuery","fetchReview","review"],"sourceRoot":""}